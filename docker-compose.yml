version: '3.8'

services:
  # Backend API
  otablog-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: otablog-api
    restart: unless-stopped
    ports:
      - "5555:5555"
    environment:
      - NODE_ENV=production
      - PORT=5555
      - HOST=0.0.0.0
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      # Development uchun hot reload (optional)
      # - ./:/usr/src/app
      # - /usr/src/app/node_modules
      # Logs uchun
      - ./logs:/usr/src/app/logs
    networks:
      - otablog-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5555/healthz', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - mongodb

  # MongoDB (development uchun)
  mongodb:
    image: mongo:7
    container_name: otablog-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-adminpassword}
      - MONGO_INITDB_DATABASE=otablog
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - otablog-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: otablog-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - otablog-backend
    networks:
      - otablog-network

# Volumes
volumes:
  mongodb_data:
    driver: local

# Networks
networks:
  otablog-network:
    driver: bridge
